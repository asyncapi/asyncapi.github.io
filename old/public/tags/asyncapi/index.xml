<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Asyncapi on AsyncAPI Initiative</title>
    <link>https://www.asyncapi.com/tags/asyncapi/</link>
    <description>Recent content in Asyncapi on AsyncAPI Initiative</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 12 Jun 2019 10:56:52 +0100</lastBuildDate>
    
	<atom:link href="https://www.asyncapi.com/tags/asyncapi/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AsyncAPI 2.0.0 important dates</title>
      <link>https://www.asyncapi.com/blog/v2-important-dates/</link>
      <pubDate>Wed, 12 Jun 2019 10:56:52 +0100</pubDate>
      
      <guid>https://www.asyncapi.com/blog/v2-important-dates/</guid>
      <description>Hey folks! After some time thinking about it, I&amp;rsquo;ve decided it&amp;rsquo;s time to define some important dates for AsyncAPI 2.0.0. So here we go!
End of review period (July 1, 2019) After some time, many people have reviewed the specification and they&amp;rsquo;ve identified some issues that need to be addressed before we launch the version 2.0.0. Actually, this process will never finish but we have to decide on a date to stop reviewing and move forward.</description>
    </item>
    
    <item>
      <title>AsyncAPI and CloudEvents</title>
      <link>https://www.asyncapi.com/blog/asyncapi-cloud-events/</link>
      <pubDate>Sat, 11 May 2019 16:56:52 +0100</pubDate>
      
      <guid>https://www.asyncapi.com/blog/asyncapi-cloud-events/</guid>
      <description>I&amp;rsquo;ve been receiving the same question for a long time now: Should I use CloudEvents or AsyncAPI? — And my response has always been the same: it depends!
There is the belief by many people that AsyncAPI and CloudEvents are competing for the same thing. This can&amp;rsquo;t be less true, and I&amp;rsquo;d like to explain you why. Read on!
What is CloudEvents? From cloudevents.io:
 Enter CloudEvents, a specification for describing event data in a common way.</description>
    </item>
    
    <item>
      <title>Status update (week 17, 2019)</title>
      <link>https://www.asyncapi.com/blog/status-update-week-17-2019/</link>
      <pubDate>Thu, 25 Apr 2019 13:56:52 +0100</pubDate>
      
      <guid>https://www.asyncapi.com/blog/status-update-week-17-2019/</guid>
      <description>Alas güenas tardis! This week we&amp;rsquo;ve made significant progress on the documentation and the parser. The goal is to make AsyncAPI 2.0.0 easy and quick to learn at the same time we provide you the necessary tools to start playing with it. Check out the progress so far:
The parser  Compile for all platforms: One of the hardest things to solve, before we continue moving forward, was the compilation process.</description>
    </item>
    
    <item>
      <title>Getting started with event-driven architectures</title>
      <link>https://www.asyncapi.com/blog/getting-started-with-event-driven-architectures/</link>
      <pubDate>Fri, 19 Apr 2019 16:56:52 +0100</pubDate>
      
      <guid>https://www.asyncapi.com/blog/getting-started-with-event-driven-architectures/</guid>
      <description>All developers, architects, and product managers are used to REST APIs and the synchronous paradigm of communication. You make a request and wait for the response. This is exactly how the web works. You enter a URL (e.g., google.com) in the address bar of your favorite browser and it sends a request to the server. Following, the server sends the response with the content of the website. The web is the greatest implementation of a REST API.</description>
    </item>
    
    <item>
      <title>Status update (week 15, 2019)</title>
      <link>https://www.asyncapi.com/blog/status-update-week-15-2019/</link>
      <pubDate>Thu, 11 Apr 2019 13:56:52 +0100</pubDate>
      
      <guid>https://www.asyncapi.com/blog/status-update-week-15-2019/</guid>
      <description>Kaixo lagunak! This week we continued working on the parser as it’s a top priority for us. We made significant progress and plan to release a simple but functional version soon.
Building the parser  We’ve added support for AsyncAPI 1.x/OpenAPI schemas. This is the first step before we dive into Avro and Protobuf support. Updated the Node.js to automatically test itself on Linux, Mac, and Windows. We’re still struggling to debug some failures on Windows so we encourage people who work on this operating system to join and help us test.</description>
    </item>
    
    <item>
      <title>Status update (week 14, 2019)</title>
      <link>https://www.asyncapi.com/blog/status-update-week-14-2019/</link>
      <pubDate>Thu, 04 Apr 2019 13:56:52 +0100</pubDate>
      
      <guid>https://www.asyncapi.com/blog/status-update-week-14-2019/</guid>
      <description>Hallo meine Freunde! This week we’ve done great progress on tooling and documentation. It will be our main focus for the next month. In the meantime, check out what we did last week. Read on!
Improvements on documentation  Check out version 2.0.0-rc1 of the specification in our website: https://www.asyncapi.com/docs/specifications/2.0.0-rc1/. Added a “Hello world” article to our getting started guide: https://github.com/asyncapi/asyncapi.github.io/pull/3. Added a “Servers” article to our getting started guide, explaining how the “servers” section of AsyncAPI works: https://github.</description>
    </item>
    
    <item>
      <title>Organizing your AsyncAPI documents</title>
      <link>https://www.asyncapi.com/blog/organizing-asyncapi-documents/</link>
      <pubDate>Fri, 01 Mar 2019 13:56:52 +0100</pubDate>
      
      <guid>https://www.asyncapi.com/blog/organizing-asyncapi-documents/</guid>
      <description>A recurring question that I get very often is: “how do I organize my AsyncAPI documents?”. Also, the related one: “I have two services, a publisher and a consumer, should I define both in the same AsyncAPI document?”.
Let’s break down some best practices and tips to avoid ending up in a hell of unmanageable documents.
Organizing Microservices  I’m using the term microservices here because it’s the most common type of distributed architecture that you can find nowadays.</description>
    </item>
    
  </channel>
</rss>